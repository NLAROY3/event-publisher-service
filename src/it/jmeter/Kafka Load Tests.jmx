<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.2">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Kafka producer load stress tests" enabled="true">
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="uuid" elementType="Argument">
            <stringProp name="Argument.name">uuid</stringProp>
            <stringProp name="Argument.value">${__UUID}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="timestamp" elementType="Argument">
            <stringProp name="Argument.value">${__time(yyyy-MM-dd&apos;T&apos;hh:mm:ss.SSS&apos;Z&apos;,)}</stringProp>
            <stringProp name="Argument.name">timestamp</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="randomInt" elementType="Argument">
            <stringProp name="Argument.value">${__Random(0,9999)}</stringProp>
            <stringProp name="Argument.name">randomInt</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.comments">You can run me using: jmeter -Jthreads=&lt;Number of threads&gt; -Jrampup=&lt;rampup in seconds&gt; -Jduration=&lt;duration in seconds&gt; -Jiterations=&lt;Number of iterations, -1 means infinite&gt; -e -o &lt;report output folder&gt;</stringProp>
    </TestPlan>
    <hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.num_threads">${__P(threads,10)}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(rampup,30)}</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${__P(duration,3600)}</stringProp>
        <stringProp name="ThreadGroup.delay">1</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <stringProp name="LoopController.loops">${__P(iterations,-1)}</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <boolProp name="ThreadGroup.delayedStart">false</boolProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{   &quot;event_name&quot;: &quot;My IGW event ${uuid}&quot;,   &quot;event_uuid&quot;: &quot;${uuid}&quot;,   &quot;event_domain&quot;: &quot;IGW Things&quot;,   &quot;event_type&quot;: &quot;IGW create test&quot;,   &quot;event_subtype&quot;: &quot;CREATE&quot;,   &quot;event_datetime&quot;: &quot;${timestamp}&quot;,   &quot;event_origin_id&quot;: &quot;IGW&quot;,   &quot;object_type&quot;: &quot;CLD&quot;,   &quot;object_id&quot;: &quot;${randomInt}&quot;,   &quot;correlation_id&quot;: &quot;${uuid}&quot;,   &quot;resources&quot;: {},   &quot;payload&quot;: {     &quot;topic&quot;: &quot;InformationGateway&quot;,     &quot;eventType&quot;: &quot;IGW_PRODUCT_READY&quot;,     &quot;technicalInformation&quot;: {       &quot;consumerApp&quot;: &quot;O_AP_ARCRI&quot;,       &quot;correlationId&quot;: &quot;MonValCREDITREFORM&quot;,       &quot;eventTimestamp&quot;: &quot;${timestamp}&quot;,       &quot;eventCounter&quot;: 0     },     &quot;keyAttributes&quot;: {       &quot;product&quot;: &quot;CREDITREFORM_FULL&quot;,       &quot;igwRequestIdentifier&quot;: [         {           &quot;provider&quot;: 125,           &quot;identifierType&quot;: &quot;PROV_INT_ID&quot;,           &quot;identifierValue&quot;: &quot;03453452013682&quot;         }       ],       &quot;maxAge&quot;: &quot;${timestamp}&quot;     },     &quot;informationLocation&quot;: {       &quot;productUrl&quot;: &quot;https://desaigw.iberinform.es/api/v1/product/1152%22&quot;,       &quot;rawData&quot;: [         {           &quot;rawDataUrl&quot;: &quot;https://desaigw.iberinform.es/api/v1/dataset/2386/raw%22&quot;,           &quot;updated&quot;: &quot;${timestamp}&quot;,           &quot;type&quot;: &quot;SOAP&quot;,           &quot;format&quot;: &quot;XML&quot;         }       ]     },     &quot;error&quot;: null   } }</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">apps.sit.sc.atradiusnet.com</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/sc/platforms/events/v1/publish-igw-event</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="TestPlan.comments">Created from cURL on 2023-09-20T10:23:57.491</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2023-09-20T10:23:57.492</stringProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP CookieManager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <stringProp name="TestPlan.comments">Created from cURL on 2023-09-20T10:23:57.493</stringProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
        </CookieManager>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
